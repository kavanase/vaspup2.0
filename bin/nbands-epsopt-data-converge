#!/bin/bash
# vaspup2.0 - SeÃ¡n Kavanagh (sean.kavanagh.19@ucl.ac.uk), 2023
rm -f data # delete data file if exists
# Note that we ignore off-diagonal elements in this script
n=0
shopt -s extglob
for i in {!(*_*),*_*}/OUTCAR
do
  if ! [[ $i == "*_*/OUTCAR" ]]
  then
  if ! [[ $i == "!(*_*)/OUTCAR" ]]
  then

  folder=${i/OUTCAR/}
  name=${folder//[\/]/} # folder name without slashes

#  optic_dielectric_tensor=$(grep -s -A 3 "frequency dependent      REAL DIELECTRIC FUNCTION (independent particle, no local field effects) density-density" $folder/OUTCAR | tail -1 | tr -d '\n') # tr is to remove the trailing newline
  vasp_optics_string="frequency dependent      REAL DIELECTRIC FUNCTION (independent particle, no local field effects)"
  if grep -q "$vasp_optics_string density-density" "$folder/OUTCAR"; then
    optic_dielectric_tensorX=$(grep -s -A 3 "$vasp_optics_string density-density" $folder/OUTCAR | tail -1 | awk '{print $2}' | tr -d '\n')
    optic_dielectric_tensorY=$(grep -s -A 3 "$vasp_optics_string density-density" $folder/OUTCAR | tail -1 | awk '{print $3}' | tr -d '\n')
    optic_dielectric_tensorZ=$(grep -s -A 3 "$vasp_optics_string density-density" $folder/OUTCAR | tail -1 | awk '{print $4}' | tr -d '\n')
  else
    optic_dielectric_tensorX=$(grep -s -A 3 "$vasp_optics_string" $folder/OUTCAR | tail -1 | awk '{print $2}' | tr -d '\n')
    optic_dielectric_tensorY=$(grep -s -A 3 "$vasp_optics_string" $folder/OUTCAR | tail -1 | awk '{print $3}' | tr -d '\n')
    optic_dielectric_tensorZ=$(grep -s -A 3 "$vasp_optics_string" $folder/OUTCAR | tail -1 | awk '{print $4}' | tr -d '\n')
  fi

  echo -n -e "$name\t$optic_dielectric_tensorX\t$optic_dielectric_tensorY\t$optic_dielectric_tensorZ" >> data

  nelm=$(grep NELM $folder/OUTCAR | awk '{print $3}' | head -1 | tr -d ";" )
  n_iter=$(grep Iteration $folder/OUTCAR | awk '{print $4}' | tail -1 | tr -d ")" )

  #if $(grep -q "electronic self-consistency was not achieved" $folder/OUTCAR); then  # Only works for VASP 6
  if [ "$n_iter" == "$nelm" ]; then 
      echo -e "Electronic self-consistency was not reached for ${name} (i.e. NELM reached),\nconvergence results likely unreliable."
  fi

  if [ "$n" -ne "0" ]; then # the first line will not have a difference therefore ignore it
    prevx=$(sed "${n}q;d" data | awk '{print $2}' )
    diffx=$(printf "%.4f" "$(echo "scale=4; $prevx - $optic_dielectric_tensorX" | bc)")
    prevy=$(sed "${n}q;d" data | awk '{print $3}' )
    diffy=$(printf "%.4f" "$(echo "scale=4; $prevy - $optic_dielectric_tensorY" | bc)")
    prevz=$(sed "${n}q;d" data | awk '{print $4}' )
    diffz=$(printf "%.4f" "$(echo "scale=4; $prevz - $optic_dielectric_tensorZ" | bc)")

    echo -n -e "\t$diffx \t $diffy \t $diffz" >> data
  fi

  echo -n -e "\n" >> data
  let n=n+1
  fi
  fi

done
echo "Directory:                   Epsilon_Opt X,Y,Z:                     Difference EpsOpt X,Y,Z:" > header
cat header data >&1 | tee NBANDS_Convergence_Data
rm -f header
rm -f data

